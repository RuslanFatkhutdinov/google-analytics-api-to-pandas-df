{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Get Data from Google Analytics API (colab notebooks)",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RuslanFatkhutdinov/google-analytics-api-to-pandas-df/blob/master/google-analytics-api-to-pandas-df\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "R1Z6vm5CBaq0",
        "colab_type": "text"
      },
      "source": [
        "# Получение данных из Google Analytics по API.\n",
        "\n",
        "---\n",
        "\n",
        "## О тетрадке\n",
        "В тетрадке собран алоритм экспорта данных по API Google Analtics при помощи модуля gaapi4py. \n",
        "\n",
        "## Структура\n",
        "1. Установка и импорт необходимых модулей.\n",
        "2. Подключение к Google Drive.\n",
        "3. Авторизация в Google Analytics.\n",
        "4. Экспорт данных:\n",
        "    - Простой запрос;\n",
        "    - Запрос с обходом семплирования.\n",
        "5. Сохранение данных в CSV.\n",
        "\n",
        "## Необходимые модули\n",
        "- **gaapi4py** — для работы с API Google Analytics;\n",
        "- **join** из **os.path** — присоединяет части адреса в операционной системы;\n",
        "- **drive** из **google.colab** — чтение и запись данных на Google Drtive;\n",
        "- **pandas** — работа с данными в таблицах;\n",
        "- **date** из **datetime** — оставить дату из объекта с датой и временем;\n",
        "- **timedelta** из **datetime** — \"смещение\" даты;\n",
        "- **sleep** из **time** — таймауты между запросами.\n",
        "\n",
        "\n",
        "## Полезные ссылки\n",
        "- [Документация по модулю gaapi4py](https://pypi.org/project/gaapi4py/);\n",
        "- [Dimensions & Metrics Explorer](https://ga-dev-tools.appspot.com/dimensions-metrics-explorer/);\n",
        "- [Google API Console](https://console.developers.google.com/apis/dashboard);\n",
        "- [Google Analytics](https://analytics.google.com/analytics/)."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "omnR1XoMDoIa",
        "colab_type": "text"
      },
      "source": [
        "# 1. Установка и импорт необходимых модулей"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kUCL2pVrGngt",
        "colab_type": "text"
      },
      "source": [
        "Модуля gaapi4py в colab нет. Надо устанавливать каждый перезапуск виртуальной машины `¯\\_(ツ)_/¯`."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NlBHSHr0AacL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!pip install gaapi4py"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "49ikxW40hMPD",
        "colab_type": "text"
      },
      "source": [
        "Импортируем модули"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JOaw9ZQegyq4",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from os.path import join \n",
        "from google.colab import drive \n",
        "import pandas as pd\n",
        "from gaapi4py import GAClient\n",
        "from datetime import date, timedelta\n",
        "from time import sleep"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TRKTr5YYD7CV",
        "colab_type": "text"
      },
      "source": [
        "# 2. Подключение к Google Drive"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zt7q0cuNHxUS",
        "colab_type": "text"
      },
      "source": [
        "Чтобы работать с файлами, хранящимися в Google Drive, в том числе и сохранять файлы на Google Drive, подключаемся к его файловой системе и сохраняем в переменной ROOT путь к \"рабочей\" области."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V0hs6CqLisOP",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "ROOT = '/content/drive'\n",
        "drive.mount(ROOT)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Es-L7bl6JUXg",
        "colab_type": "text"
      },
      "source": [
        "В левой части тетрадки есть \"ушко\", нажав на которое откроется дополнительное меню. На вкладке **Files** показана стркутура Google Drive. Можно сразу перейти по пути **/contetnt/drive/My Drive** чтобы посмотреть структуру диска.\n",
        "\n",
        "![alt text](https://d1ro8r1rbfn3jf.cloudfront.net/ms_2876/dd5ONjtUan25JSZmy6YMjHwztm6SpM/2019-10-01%2B14-54-36.jpg?Expires=1569931200&Signature=qXH6QWuhrw2gFCj585V8-e2jC1DN0B8hfsoLzD3u~S-d03UJhgaPC-EI7v3mmQ-TQtxajAC0Bz5Oa7OZTRuiiVeVQA4JYbInEF1aMvN2l8ch0biYlbEX3AdhPajRsZH9cZ9CxWRkf1nZdmLqVeHaIEQMu-KVEYLgGtT2cNvWmpzHRbeaGWK1F7RqnoSh-eX2rgUDfuIdP0CrWBNEkhrVrw8Pp5g~zaYQeTX1WJ4I~1JpY6aiokPH45GS5ALjO~j0ucCYJjuBk0O2kIew2TSl20mV6IWrQX1B7esI2e6KBaVTrLDDNORNTRn9PnFMdYxG8kOQx1Ikc~HgV9oU2ZxJ1g__&Key-Pair-Id=APKAJBCGYQYURKHBGCOA)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RBsMtVDELko6",
        "colab_type": "text"
      },
      "source": [
        "# 3. Авторизация в Google Analytics\n",
        "1. Получаем сервисный ключ. Как это сделано опиасно в [этой статье](https://medium.com/@fatkhutdinov/%D1%8D%D0%BA%D1%81%D0%BF%D0%BE%D1%80%D1%82-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D0%B8%D0%B7-api-google-analytics-%D0%B2-pandas-dataframe-2b045cf47f20).\n",
        "2. Даем доступ сервисному аккаунту к нужному представлению в Google Analytics.\n",
        "2. Сохраняем json файл с ключем в папке Google Drive (в случае с этой тетрадкой файл будет сохранен по пути **'My Drive/Workspace/Google Account Auth'**)."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GdmmkJyCPW-T",
        "colab_type": "text"
      },
      "source": [
        "- Сохраняем путь к файлу с ключем в переменной **AUTH_KEY**.\n",
        "- Методом **join** объединяем путь к рабочей области (переменная **ROOT**) и к сервисному ключу (переменная **AUTH_KEY**) и сохраняем в переменной **KEY_PATH**."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rvhfGoy5JTyu",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "AUTH_KEY = 'My Drive/Workspace/Auth/auth_key.json'\n",
        "KEY_PATH = join(ROOT, AUTH_KEY)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3U2SmonfP9wC",
        "colab_type": "text"
      },
      "source": [
        "# 4. Экспорт данных\n",
        "В зависимости от того, начинает GA семплироват данные или нет, можно использовтаь разные запросы:\n",
        "- Простой запрос;\n",
        "- Запрос с обходом семплирования."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qlYVzfqYQacM",
        "colab_type": "text"
      },
      "source": [
        "Сохраняем \"авторизацию\" в переменной **ga**."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3cCBqKDaP8lE",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "ga = GAClient(KEY_PATH)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FKjPVqGZQx_b",
        "colab_type": "text"
      },
      "source": [
        "## 4.1. Простой запрос"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bUbnsX7yQ2PP",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "ga.set_view_id('XXX') # Указываем ID представления\n",
        "ga.set_dateranges('2019-09-30', '2019-09-30') # Указываем даты начала и конца\n",
        "\n",
        "# Формируем список параметров и показателй\n",
        "request_body = {\n",
        "    'dimensions': {\n",
        "        'ga:transactionId',\n",
        "        'ga:date',\n",
        "        'ga:clientID'\n",
        "        },\n",
        "    'metrics': {\n",
        "        'ga:transactionRevenue'\n",
        "        }\n",
        "    }\n",
        "\n",
        "# Сохраняем полученные данные в переменную\n",
        "response = ga.get_all_data(request_body)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jiUk1P1XVTum",
        "colab_type": "text"
      },
      "source": [
        "Быстрый доступ к информации:\n",
        "- **response['info']** — мета-информация,\n",
        "- **response['data']** — датафрейм для pandas."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "x6I98u7eVvz1",
        "colab_type": "text"
      },
      "source": [
        "# 4.2. Запрос с обходом семплирования"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wFDtI7M0Q63U",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "ga.set_view_id('XXX') # ID представления\n",
        "start_date = date(2018,9,1) # Дата начала (Г,М,Д)\n",
        "end_date = date(2019,9,29) # Дата завершения\n",
        "\n",
        "# Цикл получения данных\n",
        "df_list = []\n",
        "iter_date = start_date\n",
        "while iter_date <= end_date:\n",
        "    ga.set_dateranges(iter_date, iter_date)\n",
        "    response = ga.get_all_data({\n",
        "        'dimensions': {\n",
        "            'ga:transactionId',\n",
        "            'ga:date',\n",
        "            'ga:clientID'\n",
        "        },\n",
        "        'metrics': {\n",
        "            'ga:transactionRevenue'\n",
        "        }\n",
        "    })\n",
        "    df = response['data']\n",
        "    df['date'] = iter_date\n",
        "    df_list.append(response['data'])\n",
        "    iter_date = iter_date + timedelta(days=1)\n",
        "    sleep(1)\n",
        "\n",
        "# Сохраняем полученные данные\n",
        "all_data = pd.concat(df_list, ignore_index=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iMzcECoDXhy3",
        "colab_type": "text"
      },
      "source": [
        "# 5. Сохраняем данные в CSV"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_gT3pJIbk9Jm",
        "colab_type": "text"
      },
      "source": [
        "В скобках в кавычках указываем путь (с учетом того, что путь **'/content/drive/My Drive/'** — путь до корня рабочей области), название и расширение `.csv`."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Z-H13SNAldwf",
        "colab_type": "text"
      },
      "source": [
        "Код для сохранения данных простого запроса."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RZ8qfz4PljHv",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "response['data'].to_csv('/content/drive/My Drive/Workspace/response.csv', index = False)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wcHXkDaglohh",
        "colab_type": "text"
      },
      "source": [
        "Код для сохранения данных запроса с обходом семплирования."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bC_YNLgRXvsJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "all_data.to_csv('/content/drive/My Drive/Workspace/all_data.csv', index = False)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u0BYQCX_kgfH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}